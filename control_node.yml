AWSTemplateFormatVersion: "2010-09-09"

Description: "ControllNode用のスタック"

# Parameters
Parameters:
  NameKeyPrefix:
    Type: String

# AWSの各リソースの定義
Resources:
  # VPCの定義
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
        - Key: Name
          Value: !Sub "${NameKeyPrefix}-vpc"

  # サブネットの定義
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPC
      # サブネット単位でiPv4パブリックアドレスの割り当てを有効化
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${NameKeyPrefix}-public-subnet-1a"

  # インターネットゲートウェイの定義
  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${NameKeyPrefix}-igw"
  
  # VPCGatewayAttachment定義
  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref Igw

  # ルートテーブルの定義
  RouteTable:
    Type:  AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${NameKeyPrefix}-route-table"

  # サブネットとルートテーブルの関連付け
  SubnetRouteTable1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1a
      RouteTableId: !Ref RouteTable

  # インターネットゲートウェイとルートテーブルの関連付け
  TableWithIgw:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw

  # セキュリティグループの定義
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: This Security Group is for iPadDev
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: For HTTP
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: For SSH
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
          Description: For Jenkins
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${NameKeyPrefix}-sg"

  # EC2インスタンスの定義
  Ec21a:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref PublicSubnet1a
      InstanceType: t2.medium
      AvailabilityZone: ap-northeast-1a
      KeyName: id_rsa_aws_from_m1_mac
      Monitoring: false
      # ここのAMIはマネジメントコンソールから確認可能
      # 中身はAmazon Linux2
      ImageId: ami-00f045aed21a55240
      InstanceInitiatedShutdownBehavior: stop
      SecurityGroupIds:
        - !Ref SecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo yum update -y
          sudo amazon-linux-extras install -y ansible2
          sudo yum install -y java-1.8.0-openjdk-devel.x86_64
          sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo
          sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
          sudo yum install -y jenkins git
          sudo service jenkins start
      Tags:
        - Key: Name
          Value: !Sub "${NameKeyPrefix}-Ec21a"

  JenkinsIamUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: adminPass&202!0710
      Policies:
        - PolicyName: JenkinsRDSFullAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - "rds:*"
                - "application-autoscaling:DeleteScalingPolicy"
                - "application-autoscaling:DeregisterScalableTarget"
                - "application-autoscaling:DescribeScalableTargets"
                - "application-autoscaling:DescribeScalingActivities"
                - "application-autoscaling:DescribeScalingPolicies"
                - "application-autoscaling:PutScalingPolicy"
                - "application-autoscaling:RegisterScalableTarget"
                - "cloudwatch:DescribeAlarms"
                - "cloudwatch:GetMetricStatistics"
                - "cloudwatch:PutMetricAlarm"
                - "cloudwatch:DeleteAlarms"
                - "ec2:DescribeAccountAttributes"
                - "ec2:DescribeAvailabilityZones"
                - "ec2:DescribeCoipPools"
                - "ec2:DescribeInternetGateways"
                - "ec2:DescribeLocalGatewayRouteTables"
                - "ec2:DescribeLocalGatewayRouteTableVpcAssociations"
                - "ec2:DescribeLocalGateways"
                - "ec2:DescribeSecurityGroups"
                - "ec2:DescribeSubnets"
                - "ec2:DescribeVpcAttribute"
                - "ec2:DescribeVpcs"
                - "ec2:GetCoipPoolUsage"
                - "sns:ListSubscriptions"
                - "sns:ListTopics"
                - "sns:Publish"
                - "logs:DescribeLogStreams"
                - "logs:GetLogEvents"
                - "outposts:GetOutpostInstanceTypes"
              Resource:
                - "*"
            - Effect: Allow
              Action: "pi:*"
              Resource:
                - "arn:aws:pi:*:*:metrics/rds/*"
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole"
              Resource:
                - "*"
              Condition:
                StringLike:
                  iam:AWSServiceName:
                    - "rds.amazonaws.com"
                    - "rds.application-autoscaling.amazonaws.com"

        - PolicyName: JenkinsEC2AndVPCFullAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "ec2:*"
                Resource:
                  - "*"
              - Effect: Allow
                Action: "elasticloadbalancing:*"
                Resource:
                  - "*"
              - Effect: Allow
                Action: "cloudwatch:*"
                Resource:
                  - "*"
              - Effect: Allow
                Action: "autoscaling:*"
                Resource:
                  - "*"
              - Effect: Allow
                Action: "iam:CreateServiceLinkedRole"
                Resource:
                  - "*"
                Condition:
                  StringEquals:
                    iam:AWSServiceName:
                      - "autoscaling.amazonaws.com"
                      - "ec2scheduled.amazonaws.com"
                      - "elasticloadbalancing.amazonaws.com"
                      - "spot.amazonaws.com"
                      - "spotfleet.amazonaws.com"
                      - "transitgateway.amazonaws.com"

        - PolicyName: JenkinsCloudFormationFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "cloudformation:*"
                Resource:
                  - "*"
      Tags:
        - Key: Name
          Value: !Sub "${NameKeyPrefix}-jenkins_from_cfn"
      UserName: jenkins_from_cfn_live15_20210710
